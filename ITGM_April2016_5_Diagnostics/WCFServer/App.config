<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="customPasswordValidator">
          <serviceCredentials>
            <serviceCertificate storeLocation="CurrentUser" storeName="My" findValue="MosaicSystem42" x509FindType="FindBySubjectName"/>
            <userNameAuthentication 
              userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="WCFServer.CustomUserNamePasswordValidator, WCFServer"/>
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <wsHttpBinding>
        <binding
          name="secureBinding"
          maxReceivedMessageSize="500000000"
          maxBufferPoolSize="152428800">
          <readerQuotas
            maxStringContentLength="500000000" maxArrayLength="500000000"/>
          <security mode="Message">
            <message clientCredentialType="UserName"/>
          </security>
        </binding>
      </wsHttpBinding>
     </bindings>
    <services>
      <service name="WCFServer.Service" behaviorConfiguration="customPasswordValidator">
        <endpoint address="http://localhost:8080/Service"
                  binding="wsHttpBinding" 
                  bindingConfiguration="secureBinding" 
                  name="ServiceEndpoint" 
                  contract="WCFContract.IService"/>
      </service>
      <service name="WCFServer.InternalService.InternalService">
        <endpoint address="net.pipe://localhost/InternalService"
                  binding="netNamedPipeBinding"
                  name="ServiceEndpoint"
                  contract="WCFServer.InternalService.IInternalContract"/>
      </service>
    </services>
    <client>
      <endpoint address="net.pipe://localhost/InternalService"
                binding="netNamedPipeBinding"
                contract="WCFServer.InternalService.IInternalContract" />
    </client>
    <diagnostics wmiProviderEnabled="true">
      <!--
        This is a configuration of WCF mesage logging.
        - logEntireMessage flag states that message body should be logged (by default only
          header is logged.
        - logMessagesAtServiceLevel flag enables or disables logging of WCF messages (note
          that this feature is NOT controlled by tracing level).
          
        For more details see http://msdn.microsoft.com/en-us/library/ms730064.aspx
      -->
      <messageLogging
        logEntireMessage="true"
        logMessagesAtServiceLevel="false"
        logMessagesAtTransportLevel="false"
        maxSizeOfMessageToLog="200000000">
        <!--
        This is a filter used to filter out infrastructure messages.
        -->
        <filters>
          <!--
            This filter removes sessions related messages and "ping" reuqest from 
            clietns to Mosaic Host.
          -->
          <add
            xmlns:s="http://www.w3.org/2003/05/soap-envelope"
            xmlns:a="http://www.w3.org/2005/08/addressing">
            s:Envelope/s:Header/a:Action[not(contains(text(),'IConnectionRegister') or contains(.,'IHostInfo/GetHostStatus') or contains(.,'2005/02/trust'))]
          </add>
        </filters>
      </messageLogging>
    </diagnostics>


  </system.serviceModel>

  <system.diagnostics>
    <trace autoflush="true"/>
    <sources>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <remove name="Default"/>
          <add name="TextFileListener"/>
        </listeners>
      </source>

      <source name="System.ServiceModel" switchValue="Information">
        <listeners>
          <remove name="Default"/>
          <add name="TextFileListener"/>
        </listeners>
      </source>
    </sources>

    <sharedListeners>
      <add name="TextFileListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="C:\TextWriterOutput.e2e" />
    </sharedListeners>
  </system.diagnostics>
</configuration>